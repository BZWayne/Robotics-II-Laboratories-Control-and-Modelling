clear
deg = pi/180;

L(1) = Revolute('d', 0, 'a', 0.5, 'alpha', 0, ...
    'I', [1, 1, 1], ...
    'm', 0.01, ...
    'Jm', 1, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4);

L(2) = Revolute('d', 0, 'a', 0.5, 'alpha', 0, ...
    'I', [1, 1, 1], ...
    'm', 0.01, ...
    'Jm', 1, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4);

L(3) = Revolute('d', 0, 'a', 0.5, 'alpha', 0, ...
    'I', [1, 1, 1], ...
    'm', 0.01, ...
    'Jm', 1, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4);

L(4) = Revolute('d', 0, 'a', 0.5, 'alpha', 0, ...
    'I', [1, 1, 1], ...
    'm', 0.01, ...
    'Jm', 1, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4);

L(5) = Revolute('d', 0, 'a', 0.5, 'alpha', 0, ...
    'I', [1, 1, 1], ...
    'm', 0.01, ...
    'Jm', 1, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4);

snake_planar = SerialLink (L, 'name', 'Snake Robot');

home = [0 0 0 0 0];
hold = [0 pi/2 0 0 0];
clear L;

% M = snake_planar.inertia(home);
% G_home = snake_planar.gravload(home);
% F = snake_planar.friction(qz);
% J_home = snake_planar.jacob0(home);

snake_planar.plot(home)
%snake_planar.teach(home)